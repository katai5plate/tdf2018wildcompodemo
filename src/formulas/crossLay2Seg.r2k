in(rax, ray, rbx, rby)
in(sax, say, sbx, sby)
out(res, x, y, p)

// 初期化
res = 1

// p値とd値を算出
rpx = rax : rpy = ray
rdx = rbx - rax : rdy = rby - ray
spx = sax : spy = say
sdx = sbx - sax : sdy = sby - say

// 平行かどうか
n1 = rdx * @ : n2 = rdy * @ : n3 = n1 + n2
sqrt(rm, n3)
n1 = sdx * @ : n2 = sdy * @ : n3 = n1 + n2
sqrt(sm, n3)

n1 = rdx / rm : n2 = sdx / sm
if n1 = n2
  n1 = rdy / rm : n2 = sdy / sm
  caset n1 = n2 res 0
if.end

// T1 と T2 を算出
n1 = spy - rpy * rdx : n2 = rpx - spx * rdy : n3 = n1 + n2
n1 = sdx * rdy : n2 = sdy * rdx : n4 = n1 - n2
t2 = n3 / n4
t1 = sdx * t2 + spx - rpx / rdx

// T1 と T2 の状態から衝突を調べる
caset t1 < 0 res 0
caset t2 < 0 res 0 : caset t2 > 1 res 0

// 衝突がある場合
if res = 1
  x = rdx * t1 + rpx
  y = rdy * t1 + rpy
  p = t1
if.end
